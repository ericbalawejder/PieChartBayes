// ~->[DNET-1]->~

// File created by an unlicensed user using Netica 5.04 on 02/10/17 at 15:46:03.

bnet IntendedMessage {
autoupdate = FALSE;

node IntendedMessage {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (singleSlice, fraction, versus, biggestSlice, majoritySlice, addSlices, twoTiedForBiggest, noMajority, smallestSlice, closeToHalf, numOfParts);
	parents = ();
	probs = 
		// singleSlice  fraction     versus       biggestSlice majoritySlice addSlices   twoTiedForBigges noMajority smallestSlice closeToHalf numOfParts 
		  (0.09756097,  0.09756097,  0.09756097,  0.09756097,  0.2926829,   0.07317073,  0.09756097,  0.04878049,  0.02439024,  0.02439024,  0.04878049);
	numcases = 41;
	title = "Intended Message";
	};

node NumberOfSlices {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (two, three, four, fiveOrMore);
	parents = (IntendedMessage);
	probs = 
		// two          three        four         fiveOrMore    // IntendedMessage  
		  (0.4285714,   0.1428571,   0.1428571,   0.2857143,    // singleSlice      
		   0.5714286,   0.1428571,   0.1428571,   0.1428571,    // fraction         
		   0.1428571,   0.4285714,   0.2857143,   0.1428571,    // versus           
		   0.1428571,   0.4285714,   0.2857143,   0.1428571,    // biggestSlice     
		   0.4,         0.3333333,   0.1333333,   0.1333333,    // majoritySlice    
		   0.1666667,   0.3333333,   0.3333333,   0.1666667,    // addSlices        
		   0.2857143,   0.4285714,   0.1428571,   0.1428571,    // twoTiedForBigges 
		   0.2,         0.2,         0.2,         0.4,          // noMajority       
		   0.25,        0.25,        0.25,        0.25,         // smallestSlice    
		   0.25,        0.25,        0.25,        0.25,         // closeToHalf      
		   0.2,         0.2,         0.2,         0.4);         // numOfParts       ;
	numcases = 
		                 // IntendedMessage  
		  (7,            // singleSlice      
		   7,            // fraction         
		   7,            // versus           
		   7,            // biggestSlice     
		   15,           // majoritySlice    
		   6,            // addSlices        
		   7,            // twoTiedForBigges 
		   5,            // noMajority       
		   4,            // smallestSlice    
		   4,            // closeToHalf      
		   5);           // numOfParts       ;
	title = "Number of slices";
	};

node Prominence {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (yes, no);
	parents = (IntendedMessage);
	probs = 
		// yes          no            // IntendedMessage  
		  (0.8,         0.2,          // singleSlice      
		   0.8,         0.2,          // fraction         
		   0.4,         0.6,          // versus           
		   0.2,         0.8,          // biggestSlice     
		   0.2307692,   0.7692308,    // majoritySlice    
		   0.25,        0.75,         // addSlices        
		   0.2,         0.8,          // twoTiedForBigges 
		   0.3333333,   0.6666667,    // noMajority       
		   0.5,         0.5,          // smallestSlice    
		   0.5,         0.5,          // closeToHalf      
		   0.3333333,   0.6666667);   // numOfParts       ;
	numcases = 
		                 // IntendedMessage  
		  (5,            // singleSlice      
		   5,            // fraction         
		   5,            // versus           
		   5,            // biggestSlice     
		   13,           // majoritySlice    
		   4,            // addSlices        
		   5,            // twoTiedForBigges 
		   3,            // noMajority       
		   2,            // smallestSlice    
		   2,            // closeToHalf      
		   3);           // numOfParts       ;
	title = "Prominence";
	};

node SimilarColors {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (yes, no);
	parents = (IntendedMessage);
	probs = 
		// yes          no            // IntendedMessage  
		  (0.2,         0.8,          // singleSlice      
		   0.2,         0.8,          // fraction         
		   0.2,         0.8,          // versus           
		   0.6,         0.4,          // biggestSlice     
		   0.3076923,   0.6923077,    // majoritySlice    
		   0.75,        0.25,         // addSlices        
		   0.6,         0.4,          // twoTiedForBigges 
		   0.3333333,   0.6666667,    // noMajority       
		   0.5,         0.5,          // smallestSlice    
		   0.5,         0.5,          // closeToHalf      
		   0.6666667,   0.3333333);   // numOfParts       ;
	numcases = 
		                 // IntendedMessage  
		  (5,            // singleSlice      
		   5,            // fraction         
		   5,            // versus           
		   5,            // biggestSlice     
		   13,           // majoritySlice    
		   4,            // addSlices        
		   5,            // twoTiedForBigges 
		   3,            // noMajority       
		   2,            // smallestSlice    
		   2,            // closeToHalf      
		   3);           // numOfParts       ;
	title = "Similar Colors";
	};

node MultipleSlices {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (yes, no);
	parents = (IntendedMessage);
	probs = 
		// yes          no            // IntendedMessage  
		  (0.8,         0.2,          // singleSlice      
		   0.2,         0.8,          // fraction         
		   0.2,         0.8,          // versus           
		   0.2,         0.8,          // biggestSlice     
		   0.3846154,   0.6153846,    // majoritySlice    
		   0.25,        0.75,         // addSlices        
		   0.6,         0.4,          // twoTiedForBigges 
		   0.6666667,   0.3333333,    // noMajority       
		   0.5,         0.5,          // smallestSlice    
		   0.5,         0.5,          // closeToHalf      
		   0.6666667,   0.3333333);   // numOfParts       ;
	numcases = 
		                 // IntendedMessage  
		  (5,            // singleSlice      
		   5,            // fraction         
		   5,            // versus           
		   5,            // biggestSlice     
		   13,           // majoritySlice    
		   4,            // addSlices        
		   5,            // twoTiedForBigges 
		   3,            // noMajority       
		   2,            // smallestSlice    
		   2,            // closeToHalf      
		   3);           // numOfParts       ;
	title = "Multiple Slices";
	};
ElimOrder = (Prominence, SimilarColors, MultipleSlices, IntendedMessage, NumberOfSlices);
};
